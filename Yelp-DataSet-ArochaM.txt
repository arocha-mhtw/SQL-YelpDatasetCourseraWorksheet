Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
		
	i. Attribute table = 10,000
	ii. Business table = 10,000
	iii. Category table = 10,000
	iv. Checkin table = 10,000
	v. elite_years table = 10,000
	vi. friend table = 10,000
	vii. hours table = 10,000
	viii. photo table = 10,000
	ix. review table = 10,000
	x. tip table = 10,000
	xi. user table = 10,000
		


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

	i. Business = 10,000
	ii. Hours = 1562 
	iii. Category = 2643 
	iv. Attribute = 1115 
	v. Review = 10,000
	vi. Checkin = 493 
	vii. Photo = 10,000
	viii. Tip = 3979 (business_id) 
	ix. User = 10,000
	x. Friend = 11
	xi. Elite_years = 2780 

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no
	
	
	SQL code used to arrive at answer:
	
		SELECT count(*)
		FROM User
		WHERE id IS NULL
		OR name IS NULL
		OR review_count IS NULL
		OR yelping_since IS NULL
		OR useful IS NULL
		OR funny IS NULL
		OR cool IS NULL
		OR fans IS NULL
		OR average_stars IS NULL
		OR compliment_hot IS NULL
		OR compliment_more IS NULL
		OR compliment_profile IS NULL
		OR compliment_cute IS NULL
		OR compliment_list IS NULL
		OR compliment_note IS NULL
		OR compliment_plain IS NULL
		OR compliment_cool IS NULL
		OR compliment_funny IS NULL
		OR compliment_writer IS NULL
		OR compliment_photos IS NULL
		
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5 		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1.0	 max: 5.0	avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144 
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	
		SELECT city, count(city) as Total
		FROM Review 
		LEFT JOIN Business ON Review.business_id = Business.id
		GROUP BY city
		ORDER BY Total DESC
	
	Copy and Paste the Result Below:
	
	+-----------------+-------+
	| city            | Total |
	+-----------------+-------+
	| Las Vegas       |   193 |
	| Phoenix         |    65 |
	| Toronto         |    51 |
	| Scottsdale      |    37 |
	| Henderson       |    30 |
	| Tempe           |    28 |
	| Pittsburgh      |    23 |
	| Chandler        |    22 |
	| Charlotte       |    21 |
	| Montréal        |    18 |
	| Madison         |    16 |
	| Gilbert         |    13 |
	| Mesa            |    13 |
	| Cleveland       |    12 |
	| North Las Vegas |     6 |
	| Edinburgh       |     5 |
	| Glendale        |     5 |
	| Lakewood        |     5 |
	| Cave Creek      |     4 |
	| Champaign       |     4 |
	| Markham         |     4 |
	| North York      |     4 |
	| Mississauga     |     3 |
	| Surprise        |     3 |
	| Avondale        |     2 |
	+-----------------+-------+
(Output limit exceeded, 25 of 68 total rows shown)
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

	SELECT stars AS StarRating, count(stars) as Count
	FROM Business 
	WHERE city = "Avon"
	GROUP BY stars, city
	ORDER BY stars DESC

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

	+------------+-------+
	| StarRating | Count |
	+------------+-------+
	|        5.0 |     1 |
	|        4.5 |     1 |
	|        4.0 |     2 |
	|        3.5 |     3 |
	|        2.5 |     2 |
	|        1.5 |     1 |
	+------------+-------+

ii. Beachwood

SQL code used to arrive at answer:

	SELECT stars AS StarRating, count(stars) as Count
	FROM Business 
	WHERE city = "Beachwood"
	GROUP BY stars, city
	ORDER BY stars DESC
	
	
Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
		
	+------------+-------+
	| StarRating | Count |
	+------------+-------+
	|        5.0 |     5 |
	|        4.5 |     2 |
	|        4.0 |     1 |
	|        3.5 |     2 |
	|        3.0 |     2 |
	|        2.5 |     1 |
	|        2.0 |     1 |
	+------------+-------+


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
		SELECT id, name, review_count
		FROM User
		ORDER BY review_count DESC
		LIMIT 3 -- For TOP 3
		
	Copy and Paste the Result Below:
	
	+------------------------+--------+--------------+
	| id                     | name   | review_count |
	+------------------------+--------+--------------+
	| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |         2000 |
	| -3s52C4zL_DHRK0ULG6qtg | Sara   |         1629 |
	| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |         1339 |
	+------------------------+--------+--------------+


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	
	Not correlated. Gerald, who has the most reviews, only has 253 fans. At the same time, Mimi has 497 fans, but she has the
	968 reviews. Moreover, Sara who is the second most reviews, but she has only 50 fans. From the result,some other factors should also be	considered.
	
	+------------------------+-----------+--------------+------+
	| id                     | name      | review_count | fans |
	+------------------------+-----------+--------------+------+
	| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |         2000 |  253 |
	| -3s52C4zL_DHRK0ULG6qtg | Sara      |         1629 |   50 |
	| -8lbUNlXVSoXqaRRiHiSNg | Yuri      |         1339 |   76 |
	| -K2Tcgh2EKX6e6HqqIrBIQ | .Hon      |         1246 |  101 |
	| -FZBTkAZEXoP7CYvRV2ZwQ | William   |         1215 |  126 |
	| --2vR0DIsmQ6WfcSzKWigw | Harald    |         1153 |  311 |
	| -gokwePdbXjfS0iF7NsUGA | eric      |         1116 |   16 |
	| -DFCC64NXgqrxlO8aLU5rg | Roanna    |         1039 |  104 |
	| -8EnCioUmDygAbsYZmTeRQ | Mimi      |          968 |  497 |
	| -0IiMAZI2SsQ7VmyzJjokQ | Christine |          930 |  173 |
	| -fUARDNuXAfrOn4WLSZLgA | Ed        |          904 |   38 |
	| -hKniZN2OdshWLHYuj21jQ | Nicole    |          864 |   43 |
	| -9da1xk7zgnnfO1uTVYGkA | Fran      |          862 |  124 |
	| -B-QEUESGWHPE_889WJaeg | Mark      |          861 |  115 |
	| -kLVfaJytOJY2-QdQoCcNQ | Christina |          842 |   85 |
	| -kO6984fXByyZm3_6z2JYg | Dominic   |          836 |   37 |
	| -lh59ko3dxChBSZ9U7LfUw | Lissa     |          834 |  120 |
	| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |          813 |  159 |
	| -l9giG8TSDBG1jnUBUXp5w | Alison    |          775 |   61 |
	| -dw8f7FLaUmWR7bfJ_Yf0w | Sui       |          754 |   78 |
	| -AaBjWJYiQxXkCMDlXfPGw | Tim       |          702 |   35 |
	| -jt1ACMiZljnBFvS6RRvnA | L         |          696 |   10 |
	| -IgKkE8JvYNWeGu8ze4P8Q | Angela    |          694 |  101 |
	| -hxUwfo3cMnLTv-CAaP69A | Crissy    |          676 |   25 |
	| -H6cTbVxeIRYR-atxdielQ | Lyn       |          675 |   45 |
	+------------------------+-----------+--------------+------+


9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:

	+------+------+----------+
	| love | hate | count(*) |
	+------+------+----------+
	|    0 |    1 |      178 |
	|    1 |    0 |     1726 |
	|    1 |    1 |       54 |
	+------+------+----------+
	
	Yes, From the result found that the number of love wording has 1726 reviews and hate has 178 reviews.


	SQL code used to arrive at answer:

		SELECT text LIKE "%love%" AS love, text LIKE "%hate%" AS hate, count(*)
		FROM Review
		WHERE text LIKE "%love%" OR  text LIKE "%hate%"
		GROUP BY love, hate
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
		SELECT id, name, fans
		FROM User
		ORDER BY fans DESC
		LIMIT 10 -- For TOP 10
	
	Copy and Paste the Result Below:
	
	+------------------------+-----------+------+
	| id                     | name      | fans |
	+------------------------+-----------+------+
	| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
	| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
	| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
	| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
	| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
	| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
	| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
	| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
	| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
	| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
	+------------------------+-----------+------+
	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?

	YES, I have used Shopping and Las Vegas. I have found that there are unique hours with each the rating star. The shop where opens at 08:00 - 22:00 have received 2.5 rating star and the shop where opens at 00:00 recieved 3.5 rating star. for the 4 - 5 star shop are the shop where opens at 08:00 and close around 16:30 or 17:00.

	+-----------+-------+----------+-----------+--------------+------------------------+
	| city      | stars | category | COUNT (*) | hour_opening | RankingGroup           |
	+-----------+-------+----------+-----------+--------------+------------------------+
	| Las Vegas |   2.5 | Shopping |         7 | 8:00-22:00   | Group Low Star Rating  |
	| Las Vegas |   3.5 | Shopping |         4 | 0:00-16:00   | Group Low Star Rating  |
	| Las Vegas |   3.5 | Shopping |         2 | 0:00-19:00   | Group Low Star Rating  |
	| Las Vegas |   4.5 | Shopping |         7 | 8:00-16:30   | Group HIGH Star Rating |
	| Las Vegas |   5.0 | Shopping |         5 | 8:00-17:00   | Group HIGH Star Rating |
	+-----------+-------+----------+-----------+--------------+------------------------+
	
	SQL code used for analysis:

		SELECT Business.city
        , Business.stars
        , category
        , COUNT (*)
        , SUBSTR(hours.hours,-10) AS hour_opening   -- get last 10 char of hour
		, CASE 										-- defined the group
            WHEN stars < 4 THEN "Group Low Star Rating"
            ELSE "Group HIGH Star Rating" 
            END RankingGroup
		FROM Business
        LEFT JOIN hours ON Business.id = hours.business_id
        LEFT JOIN category ON Business.id = category.business_id
        WHERE hours.business_id IS NOT NULL 
        AND category.business_id IS NOT NULL 
        AND category.category = "Shopping"
        AND Business.city = "Las Vegas"
        GROUP BY hour_opening, Business.stars
        ORDER BY Business.stars
		
ii. Do the two groups you chose to analyze have a different number of reviews?

	+-----------+----------+----------+------------------------+--------------+
	| city      | category | Num_Shop | Ranking_Group          | Total_Review |
	+-----------+----------+----------+------------------------+--------------+
	| Las Vegas | Shopping |       13 | Group LOW Star Rating  |          108 |
	| Las Vegas | Shopping |       12 | Group HIGH Star Rating |          244 |
	+-----------+----------+----------+------------------------+--------------+

	YES, the HIGH Star group has 244 reviews from 12 shops and LOW Star group has 108 reviews from 13 shops.
	
	SELECT-- Business.id
        Business.city
        , category
        , COUNT (*) AS Num_Shop
        , CASE -- defined the group
            WHEN Business.stars < 4 THEN "Group LOW Star Rating" -- < 4 stars
            ELSE "Group HIGH Star Rating"   -- >= 4 stars
            END Ranking_Group
        , SUM(Business.review_count) AS Total_Review
		FROM Business
        LEFT JOIN hours ON Business.id = hours.business_id
        LEFT JOIN category ON Business.id = category.business_id
        LEFT JOIN review ON Business.id = review.business_id
        WHERE hours.business_id IS NOT NULL 
        AND category.business_id IS NOT NULL 
        AND category.category = "Shopping"
        AND Business.city = "Las Vegas"
        GROUP BY RankingGroup
        ORDER BY Business.stars
         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

		YES, the Group LOW Star Rating has the same postal code and Group HIGH Star Rating are the different location with LOW Star Rating group.
		
+-----------+-------+----------+-----------------------------+-------------+----------+------------------------+--------------+
| city      | stars | category | address                     | postal_code | Num_Shop | Ranking_Group          | Total_Review |
+-----------+-------+----------+-----------------------------+-------------+----------+------------------------+--------------+
| Las Vegas |   2.5 | Shopping | 3808 E Tropicana Ave        | 89121       |        7 | Group LOW Star Rating  |           42 |
| Las Vegas |   3.5 | Shopping | 3421 E Tropicana Ave, Ste I | 89121       |        6 | Group LOW Star Rating  |           66 |
| Las Vegas |   4.5 | Shopping | 1000 Scenic Loop Dr         | 89161       |        7 | Group HIGH Star Rating |          224 |
| Las Vegas |   5.0 | Shopping | 3555 W Reno Ave, Ste F      | 89118       |        5 | Group HIGH Star Rating |           20 |
+-----------+-------+----------+-----------------------------+-------------+----------+------------------------+--------------+
		

SQL code used for analysis:

		SELECT Business.city
        , Business.stars
        , category
        , Business.address
        , Business.postal_code
        , COUNT (*) AS Num_Shop
        , CASE -- defined the group
            WHEN Business.stars < 4 THEN "Group LOW Star Rating" 	-- < 4 stars
            ELSE "Group HIGH Star Rating"   						-- >= 4 stars
            END Ranking_Group
        , SUM(Business.review_count) AS Total_Review
		FROM Business
        LEFT JOIN hours ON Business.id = hours.business_id
        LEFT JOIN category ON Business.id = category.business_id
        LEFT JOIN review ON Business.id = review.business_id
        WHERE hours.business_id IS NOT NULL 
        AND category.business_id IS NOT NULL 
        AND category.category = "Shopping"
        AND Business.city = "Las Vegas"
        GROUP BY Business.stars, Ranking_Group, Business.address, Business.postal_code
        ORDER BY Business.stars
		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
    The minimum star that the closed business received is 2.0 and the business where are still open have the minimum of star is 1.0.
         
ii. Difference 2:
	The business where are still open have more the number of reviews on average than ones where are closed
	
         
         
         
SQL code used for analysis:

        SELECT 
        MAX(b.stars),
        AVG(b.stars),
        MIN(b.stars),
        SUM(b.review_count),
        AVG(b.review_count),
        SUM(r.useful),
        SUM(r.funny), 
        SUM(r.cool),
        AVG(r.useful),
        AVG(r.funny), 
        AVG(r.cool),
        count(is_open),
        is_open
        FROM business b INNER JOIN review r ON b.id = r.business_id
        GROUP BY b.is_open
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
    I would like to open the new business in Las Vegas. What kind of business in Las Vegas that has an opportunity to receive a good feedback.
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
	I analyze their star ratings and number of reviews so that I can get some insights on what kind of  business that popular in Las Vegas. However, the high average star might not meant there is a popular business, we have to consider the number of review as well.
                           
                  
iii. Output of your finished dataset:
      
	+------------------------------+------------+------------+------------+-------------------+
	| category                     | MIN(stars) | AVG(stars) | MAX(stars) | AVG(review_count) |
	+------------------------------+------------+------------+------------+-------------------+
	| Asian Fusion                 |        4.0 |        4.0 |        4.0 |             768.0 |
	| Chinese                      |        4.0 |        4.0 |        4.0 |             768.0 |
	| Malaysian                    |        4.0 |        4.0 |        4.0 |             768.0 |
	| Noodles                      |        4.0 |        4.0 |        4.0 |             768.0 |
	| Soup                         |        4.0 |        4.0 |        4.0 |             768.0 |
	| Taiwanese                    |        4.0 |        4.0 |        4.0 |             768.0 |
	| Restaurants                  |        3.0 |      3.875 |        4.5 |             265.5 |
	| Breakfast & Brunch           |        4.0 |        4.0 |        4.0 |             168.0 |
	| French                       |        4.0 |        4.0 |        4.0 |             168.0 |
	| Gluten-Free                  |        4.0 |        4.0 |        4.0 |             168.0 |
	| Sandwiches                   |        4.0 |        4.0 |        4.0 |             168.0 |
	| Vegetarian                   |        4.0 |        4.0 |        4.0 |             168.0 |
	| American (New)               |        3.0 |        3.5 |        4.0 |             145.5 |
	| Chicken Wings                |        3.0 |        3.0 |        3.0 |             123.0 |
	| Arcades                      |        3.5 |        3.5 |        3.5 |             105.0 |
	| Arts & Entertainment         |        3.5 |        3.5 |        3.5 |             105.0 |
	| Bars                         |        3.5 |        3.5 |        3.5 |             105.0 |
	| Nightlife                    |        3.5 |        3.5 |        3.5 |             105.0 |
	| Active Life                  |        4.5 |        4.5 |        4.5 |              32.0 |
	| Community Service/Non-Profit |        4.5 |        4.5 |        4.5 |              32.0 |
	| Education                    |        4.5 |        4.5 |        4.5 |              32.0 |
	| Flowers & Gifts              |        4.5 |        4.5 |        4.5 |              32.0 |
	| Gift Shops                   |        4.5 |        4.5 |        4.5 |              32.0 |
	| Hiking                       |        4.5 |        4.5 |        4.5 |              32.0 |
	| Local Services               |        4.5 |        4.5 |        4.5 |              32.0 |
	+------------------------------+------------+------------+------------+-------------------+
	(Output limit exceeded, 25 of 63 total rows shown)	  
         
iv. Provide the SQL code you used to create your final dataset:

	SELECT c.category, MIN(stars), AVG(stars), MAX(stars), AVG(review_count)
	FROM Business b
	INNER JOIN category c ON b.id = c.business_id
	WHERE city = "Las Vegas"
	GROUP BY category
	ORDER BY AVG(review_count)  DESC